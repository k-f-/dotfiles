#!/usr/bin/env sh
# Disable System Integrety Protection
# https://github.com/koekeishiya/yabai/wiki/Disabling-System-Integrity-Protection
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#configure-scripting-addition
#
# To update the sodoers file run:
# echo "$(whoami) ALL=(root) NOPASSWD: sha256:$(shasum -a 256 $(which yabai) | cut -d " " -f 1) $(which yabai) --load-sa" | sudo tee /private/etc/sudoers.d/yabai
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

#!/usr/bin/env bash
# ====== CheatSheet=============================
# yabai -m query --displays --display | jq .index

# yabai -m query --spaces
# yabai -m query --spaces --space Comms
#
# yabai -m query --windows

# yabai -m rule --list
# ====== Variables =============================
alias yc="yabai -m config"
alias yr="yabai -m rule --add"

declare -A gaps
declare -A color

gaps["top"]="4"
gaps["bottom"]="0.9"
gaps["left"]="4"
gaps["right"]="4"
gaps["inner"]="4"

color["focused"]="0xE0808080"
color["normal"]="0x00010101"
color["preselect"]="0xE02d74da"

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                 "${gaps["top"]}"
yabai -m config bottom_padding              "${gaps["bottom"]}"
yabai -m config left_padding                "${gaps["left"]}"
yabai -m config right_padding               "${gaps["right"]}"
yabai -m config window_gap                  "${gaps["inner"]}"

# global settings
yabai -m config                                 \
    mouse_follows_focus          on             \
    focus_follows_mouse          off            \
    window_origin_display        default        \
    window_placement             second_child   \
    window_zoom_persist          on             \
    window_topmost               off            \
    window_shadow                on             \
    window_animation_duration    0.0            \
    window_animation_frame_rate  120            \
    window_opacity_duration      0.0            \
    active_window_opacity        1.0            \
    normal_window_opacity        0.90           \
    window_opacity               off            \
    insert_feedback_color        "${color["preselect"]}"        \
    active_window_border_color   "${color["focused"]}"          \
    normal_window_border_color   "${color["normal"]}"           \
    window_border_width          4              \
    window_border_radius         12             \
    window_border_blur           off            \
    window_border_hidpi          on             \
    window_border                on             \
    split_ratio                  0.50           \
    split_type                   auto           \
    auto_balance                 off            \
    mouse_modifier               fn             \
    mouse_action1                move           \
    mouse_action2                resize         \
    mouse_drop_action            swap
## START - SIP DISABLED SPECIFIC
# Destroy < 7 spaces
for _ in $(yabai -m query --spaces | jq '.[].index | select(. > 6)'); do
  yabai -m space --destroy 7
done

# Function to setup spaces
function setup_space {
  local idx="$1"
  local name="$2"
  local space=
  echo "setup space $idx : $name"

  space=$(yabai -m query --spaces --space "$idx")
  if [ -z "$space" ]; then
    yabai -m space --create
  fi

  yabai -m space "$idx" --label "$name"
}
# Setup Spaces and Label
setup_space 1 start
setup_space 2 comms
setup_space 3 browser
setup_space 4 code
setup_space 5 org
setup_space 6 games
## END - SIP DISABLED SPECIFIC

# Space labels
#yabai -m space 1 --label "start"
#yabai -m space 2 --label "comms"
#yabai -m space 3 --label "browser"
#yabai -m space 4 --label "code"
#yabai -m space 5 --label "org"
#yabai -m space 6 --label "games"

# Turn off Managing for all windows unless declared.
#yabai -m rule --add app="." manage=off
#yabai -m rule --add app="." sub-layer=normal

# Start - 1
yabai -m rule --add app="Finder" space="start" manage=off
yabai -m rule --add app="Filezilla" space="start"
yabai -m rule --add app="Activity Monitor" space="start"
yabai -m rule --add app="Todoist" space="start"

# Personal Comms - 2
yabai -m rule --add app="Spotify" space="comms"
yabai -m rule --add app="Signal" space="comms"
yabai -m rule --add app="Messages" space="comms"

# Browser - 3
yabai -m rule --add app="Firefox" space="browser"
yabai -m rule --add app="Brave" space="browser"
yabai -m rule --add app="Safari" space="browser"

# Programming - 4
yabai -m rule --add label="VSCode" app="Code" space="code"
yabai -m rule --add label="kitty" app="kitty" space="code"
yabai -m rule --add app="iTerm" space="code"
yabai -m rule --add app="Terminal" space="code"

# Org - 5
yabai -m rule --add app="Calendar" space="org"
yabai -m rule --add app="Mail" space="org"
yabai -m rule --add app="Notes" space="org"
yabai -m rule --add app="Reminders" space="org"

# Games - 6
yabai -m rule --add label="League Client" app="League of Legends" space="games"
yabai -m rule --add label="Riot Launcher" app="Riot Client" space="games"
yabai -m rule --add label="Steam" app="^Steam Helper$" space="games"
yabai -m rule --add label="Discord" app="^Discord$" space="games"
yabai -m rule --add label="LiesofP" app="^LiesofP$" space="games"
yabai -m config --space games layout float

# apps to not manage (ignore)
yabai -m rule --add app="^System Preferences$" manage=off
yabai -m rule --add app="^Archive Utility$" manage=off
yabai -m rule --add app="^Wally$" manage=off
yabai -m rule --add app="^Pika$" manage=off
yabai -m rule --add app="^balenaEtcher$" manage=off
yabai -m rule --add app="^Creative Cloud$" manage=off
yabai -m rule --add app="^Logi Options$" manage=off
yabai -m rule --add app="^Alfred Preferences$" manage=off
#yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
#yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="macfeh" app="^macfeh$" manage=off
yabai -m rule --add label="App Store" app="^App Store$" manage=off
yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
yabai -m rule --add label="KeePassXC" app="^KeePassXC$" manage=off
yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="mpv" app="^mpv$" manage=off
yabai -m rule --add label="Software Update" title="Software Update" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off
yabai -m rule --add label="System Settings" app="^System Settings$" manage=off
yabai -m rule --add label="App Store" app="^App Store$" manage=off
#yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
yabai -m rule --add label="1Password" app="^1Password$" manage=off
yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="VirtualBox" app="^VirtualBox$" manage=off
yabai -m rule --add label="iVmware Settings" app="^VMware Fusion$" manage=off
yabai -m rule --add label="Microsoft AutoUpdate" app="^Microsoft AutoUpdate$" manage=off
yabai -m rule --add label="About" title="^About$" manage=off
yabai -m rule --add label="VLC" app="^vlc$" manage=off

# add 20 padding to the top and bottom of all spaces regardless of the display it belongs to
#yabai -m config external_bar all:0:0

## Flash Window when Focus Changed.
#yabai -m signal --add label="flash_focus" event="window_focused" action="yabai -m window \$YABAI_WINDOW_ID --opacity 0.1 && sleep $(yabai -m config window_opacity_duration) && yabai -m window \$YABAI_WINDOW_ID --opacity 0.0"

## HACK! When some windows get closed you lose focus
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=space_changed action="landscape"

printf "yabai configuration loaded..\\n"

# SketchyBar Hooks
#yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
#yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
#yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"

#yabai -m signal --add event=window_created action="yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".resizable == 0 and .floating == 0" && yabai -m window $YABAI_WINDOW_ID --toggle float" label="test" active="yes"

#echo "updating..."
#YABAI_CERT=yabai-cert sh -c "$(curl -fsSL "https://git.io/update-yabai")" &
#echo "updating... done."
