[{"body":"- We're looking to create some functionality for our Aerospace config (or with a helper script) which will allow us to \"capture\" the window position and sizing in a given workspace.\n- Sizing should be not specified in units like pixels, but instead percentage of screen, orientation and stack position. \n- As an example our Workspace2: Comms should contain Messages, Signal and Spotify. We prefer that messages be stacked vertically above Signal with the width of both being about 1/3 of the available screen. Spotify should be the leftover space on the right side, covering the other 2/3s. The splits are: Split1 - Spotify sits on the right side of the screen. Messages and Signal sit on the left side, but their height is a 50% split of the total width. In Ascii art it looks something like this:\n\n```bash\n ________ ___________\n|messages|           |\n|________| Spotify.  |\n| signal |           |\n|________|___________|\n```\n\n- If possible, we'd like to be able to \"save\" a layout in a workspace.\n- We'd also like to be able to 'overwrite' and 'delete' those saved settings.\n- We want settings to be portable along with our dotfiles.\n- We can save, overwrite and delete saved layouts with command line calls to script. later we might want to investigate using keybindings.\n- As an additional feature, at aerospace launch we want to gather any windows which are currently open and position them correctly. We can use our existing \"organize\" script. We also want to explore if we can open the preconfigured windows that are not open (launch the applications) and organize them to their specific workspaces. This could allow us to have a functionality when we reboot the machine to \"snap-back-to\" our preferred layout.\n- I think we have restricted our \"organize\" script to only use \"main\" display, which is acceptable, but in an ideal world if we have more than (1) display and a workspace has been shifted to that display, when we re-run organize, we should either move it back to the other display post organization (save pre-organized display location), or organize it on the display that owns the workspace.","number":4,"title":"Aerospace - Configure Layouts"},{"body":"- We want symlinks as setup on kef-mbp for our iCloud Drive/Documents. We'd like to have that as an option when we're on osx systems after \"install\" runs. There may be some other folders in $HOME which are symlinked to the odd iCloud location.\n- Feature: Can we come up with a safe cleanup function? We end up in legacy systems with lots of older homebrew applications installed which have been superseded by newer replacements.","number":3,"title":"OSX Applications (Homebrew, AppStore, etc)"},{"body":"Need to review all settings in install-osx.sh.\n\n- We want symlinks as setup on kef-mbp for our iCloud Drive Documents and Downloads.\n- We need to review all \"default\" changes in installer to see if they currently apply for later versions of OSX. Check Apple documentation.\n- Is there a command line tool for cleanly uninstalling applications on mac-os? Similar to app-zapper where it removes the .app but also associated ktexts and preference panes?\n- We'd like OSX to **not** automatically place periods after a doublespace. We want to write that into our new osx-install.sh version.","number":2,"title":"OSX Install.sh"},{"body":"kef@kef-macmini in ~/.dots (main) \n ./install --verbose\n╔═══════════════════════════════════════╗\n║     Dotfiles Installation Script      ║\n╚═══════════════════════════════════════╝\n\n==> Detected OS: macos\n✓ GNU Stow is installed\n\n==> Installing packages for macos...\n  Running: brew bundle --file=/Users/kef/.dots/homebrew/Brewfile\nUsing d12frosted/emacs-plus\nUsing felixkratz/formulae\nUsing homebrew/bundle\nUsing homebrew/services\nUsing koekeishiya/formulae\nUsing nikitabobko/tap\n==> Downloading https://formulae.brew.sh/api/formula.jws.json\n################################################################################################################################################################################################ 100.0%\n==> Downloading https://formulae.brew.sh/api/formula_tap_migrations.jws.json\n################################################################################################################################################################################################ 100.0%\nInstalling atomicparsley\nError: unknown or unsupported macOS version: :sequoia\n! Some Homebrew packages failed to install\n✓ Homebrew packages processed\n\n==> Installing dotfiles...\n  Packages to install: bash git vim zsh aerospace doom emacs gnupg kitty mail secrets sketchybar skhd ssh x-windows yabai youtube-dl\n  Stowing bash...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"bash\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package bash...\n. not protected\nStowing contents of .dots/bash (cwd=/Users/kef)\n  => .dots/bash\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: dot-bashrc => .bashrc\nStowing .dots / bash / .bashrc\n  => .dots/bash/dot-bashrc\n  is_a_link(.bashrc)\n  link_task_action(.bashrc): no task\n  is_a_link(.bashrc): is a real link\n    parent_link_scheduled_for_removal(.bashrc): prefix .bashrc\n    parent_link_scheduled_for_removal(.bashrc): returning false\n  link_task_action(.bashrc): no task\n  read_a_link(.bashrc): real link\n  Evaluate existing link: .bashrc => Dropbox/Code/dotfiles/bash/.bashrc\n  is path Dropbox/Code/dotfiles/bash/.bashrc owned by stow?\n    no - either Dropbox/Code/dotfiles/bash/.bashrc not under .dots or vice-versa\nCONFLICT when stowing bash: existing target is not owned by stow: .bashrc\n  Using built-in ignore list\n  Adjusting: dot-bashrc.d => .bashrc.d\nStowing .dots / bash / .bashrc.d\n  => .dots/bash/dot-bashrc.d\n  is_a_link(.bashrc.d)\n  link_task_action(.bashrc.d): no task\n  is_a_link(.bashrc.d): is a real link\n    parent_link_scheduled_for_removal(.bashrc.d): prefix .bashrc.d\n    parent_link_scheduled_for_removal(.bashrc.d): returning false\n  link_task_action(.bashrc.d): no task\n  read_a_link(.bashrc.d): real link\n  Evaluate existing link: .bashrc.d => Dropbox/Code/dotfiles/bash/.bashrc.d\n  is path Dropbox/Code/dotfiles/bash/.bashrc.d owned by stow?\n    no - either Dropbox/Code/dotfiles/bash/.bashrc.d not under .dots or vice-versa\nCONFLICT when stowing bash: existing target is not owned by stow: .bashrc.d\n  Using built-in ignore list\n  Adjusting: dot-bin => .bin\nStowing .dots / bash / .bin\n  => .dots/bash/dot-bin\n  is_a_link(.bin)\n  link_task_action(.bin): no task\n  is_a_link(.bin): is a real link\n    parent_link_scheduled_for_removal(.bin): prefix .bin\n    parent_link_scheduled_for_removal(.bin): returning false\n  link_task_action(.bin): no task\n  read_a_link(.bin): real link\n  Evaluate existing link: .bin => Dropbox/Code/dotfiles/bash/.bin\n  is path Dropbox/Code/dotfiles/bash/.bin owned by stow?\n    no - either Dropbox/Code/dotfiles/bash/.bin not under .dots or vice-versa\nCONFLICT when stowing bash: existing target is not owned by stow: .bin\n  Using built-in ignore list\n  Adjusting: dot-profile => .profile\nStowing .dots / bash / .profile\n  => .dots/bash/dot-profile\n  link_task_action(.dots/bash/dot-profile): no task\n  read_a_link(.dots/bash/dot-profile): real link\n  is_a_link(.profile)\n  link_task_action(.profile): no task\n  is_a_link(.profile): is a real link\n    parent_link_scheduled_for_removal(.profile): prefix .profile\n    parent_link_scheduled_for_removal(.profile): returning false\n  link_task_action(.profile): no task\n  read_a_link(.profile): real link\n  Evaluate existing link: .profile => Dropbox/Code/dotfiles/bash/.profile\n  is path Dropbox/Code/dotfiles/bash/.profile owned by stow?\n    no - either Dropbox/Code/dotfiles/bash/.profile not under .dots or vice-versa\nCONFLICT when stowing bash: existing target is not owned by stow: .profile\nPlanning stow of package bash... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing bash would cause conflicts:\n  * existing target is not owned by stow: .bashrc\n  * existing target is not owned by stow: .bashrc.d\n  * existing target is not owned by stow: .bin\n  * existing target is not owned by stow: .profile\nAll operations aborted.\n✗ Failed to stow bash\n  Stowing git...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"git\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package git...\n. not protected\nStowing contents of .dots/git (cwd=/Users/kef)\n  => .dots/git\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Adjusting: .gitignore => .gitignore\nStowing .dots / git / .gitignore\n  => .dots/git/.gitignore\n  is_a_link(.gitignore)\n  link_task_action(.gitignore): no task\n  is_a_link(.gitignore): is a real link\n    parent_link_scheduled_for_removal(.gitignore): prefix .gitignore\n    parent_link_scheduled_for_removal(.gitignore): returning false\n  link_task_action(.gitignore): no task\n  read_a_link(.gitignore): real link\n  Evaluate existing link: .gitignore => Dropbox/Code/dotfiles/git/.gitignore\n  is path Dropbox/Code/dotfiles/git/.gitignore owned by stow?\n    no - either Dropbox/Code/dotfiles/git/.gitignore not under .dots or vice-versa\nCONFLICT when stowing git: existing target is not owned by stow: .gitignore\n    Using memoized regexps from .dots/git/.stow-local-ignore\n  Ignoring path /.stow-local-ignore\n    Using memoized regexps from .dots/git/.stow-local-ignore\n  Adjusting: .gitmessage => .gitmessage\nStowing .dots / git / .gitmessage\n  => .dots/git/.gitmessage\n  is_a_link(.gitmessage)\n  link_task_action(.gitmessage): no task\n  is_a_link(.gitmessage): is a real link\n    parent_link_scheduled_for_removal(.gitmessage): prefix .gitmessage\n    parent_link_scheduled_for_removal(.gitmessage): returning false\n  link_task_action(.gitmessage): no task\n  read_a_link(.gitmessage): real link\n  Evaluate existing link: .gitmessage => Dropbox/Code/dotfiles/git/.gitmessage\n  is path Dropbox/Code/dotfiles/git/.gitmessage owned by stow?\n    no - either Dropbox/Code/dotfiles/git/.gitmessage not under .dots or vice-versa\nCONFLICT when stowing git: existing target is not owned by stow: .gitmessage\n    Using memoized regexps from .dots/git/.stow-local-ignore\n  Adjusting: .gitconfig => .gitconfig\nStowing .dots / git / .gitconfig\n  => .dots/git/.gitconfig\n  is_a_link(.gitconfig)\n  link_task_action(.gitconfig): no task\n  is_a_link(.gitconfig): is a real link\n    parent_link_scheduled_for_removal(.gitconfig): prefix .gitconfig\n    parent_link_scheduled_for_removal(.gitconfig): returning false\n  link_task_action(.gitconfig): no task\n  read_a_link(.gitconfig): real link\n  Evaluate existing link: .gitconfig => Dropbox/Code/dotfiles/git/.gitconfig\n  is path Dropbox/Code/dotfiles/git/.gitconfig owned by stow?\n    no - either Dropbox/Code/dotfiles/git/.gitconfig not under .dots or vice-versa\nCONFLICT when stowing git: existing target is not owned by stow: .gitconfig\nPlanning stow of package git... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing git would cause conflicts:\n  * existing target is not owned by stow: .gitconfig\n  * existing target is not owned by stow: .gitignore\n  * existing target is not owned by stow: .gitmessage\nAll operations aborted.\n✗ Failed to stow git\n  Stowing vim...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"vim\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package vim...\n. not protected\nStowing contents of .dots/vim (cwd=/Users/kef)\n  => .dots/vim\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .vimrc => .vimrc\nStowing .dots / vim / .vimrc\n  => .dots/vim/.vimrc\n  is_a_link(.vimrc)\n  link_task_action(.vimrc): no task\n  is_a_link(.vimrc): is a real link\n    parent_link_scheduled_for_removal(.vimrc): prefix .vimrc\n    parent_link_scheduled_for_removal(.vimrc): returning false\n  link_task_action(.vimrc): no task\n  read_a_link(.vimrc): real link\n  Evaluate existing link: .vimrc => Dropbox/Code/dotfiles/vim/.vimrc\n  is path Dropbox/Code/dotfiles/vim/.vimrc owned by stow?\n    no - either Dropbox/Code/dotfiles/vim/.vimrc not under .dots or vice-versa\nCONFLICT when stowing vim: existing target is not owned by stow: .vimrc\nPlanning stow of package vim... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing vim would cause conflicts:\n  * existing target is not owned by stow: .vimrc\nAll operations aborted.\n✗ Failed to stow vim\n  Stowing zsh...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"zsh\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package zsh...\n. not protected\nStowing contents of .dots/zsh (cwd=/Users/kef)\n  => .dots/zsh\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .zshrc => .zshrc\nStowing .dots / zsh / .zshrc\n  => .dots/zsh/.zshrc\n  is_a_link(.zshrc)\n  link_task_action(.zshrc): no task\n  is_a_link(.zshrc): is a real link\n    parent_link_scheduled_for_removal(.zshrc): prefix .zshrc\n    parent_link_scheduled_for_removal(.zshrc): returning false\n  link_task_action(.zshrc): no task\n  read_a_link(.zshrc): real link\n  Evaluate existing link: .zshrc => Dropbox/Code/dotfiles/zsh/.zshrc\n  is path Dropbox/Code/dotfiles/zsh/.zshrc owned by stow?\n    no - either Dropbox/Code/dotfiles/zsh/.zshrc not under .dots or vice-versa\nCONFLICT when stowing zsh: existing target is not owned by stow: .zshrc\n  Using built-in ignore list\n  Adjusting: .zprofile => .zprofile\nStowing .dots / zsh / .zprofile\n  => .dots/zsh/.zprofile\n  is_a_link(.zprofile)\n  link_task_action(.zprofile): no task\n  is_a_link(.zprofile): returning 0\n  is_a_node(.zprofile)\n  link_task_action(.zprofile): no task\n  dir_task_action(.zprofile): no task\n    parent_link_scheduled_for_removal(.zprofile): prefix .zprofile\n    parent_link_scheduled_for_removal(.zprofile): returning false\n  is_a_node(.zprofile): returning false\nLINK: .zprofile => .dots/zsh/.zprofile\n  Using built-in ignore list\n  Adjusting: KEYBINDINGS.md => KEYBINDINGS.md\nStowing .dots / zsh / KEYBINDINGS.md\n  => .dots/zsh/KEYBINDINGS.md\n  is_a_link(KEYBINDINGS.md)\n  link_task_action(KEYBINDINGS.md): no task\n  is_a_link(KEYBINDINGS.md): returning 0\n  is_a_node(KEYBINDINGS.md)\n  link_task_action(KEYBINDINGS.md): no task\n  dir_task_action(KEYBINDINGS.md): no task\n    parent_link_scheduled_for_removal(KEYBINDINGS.md): prefix KEYBINDINGS.md\n    parent_link_scheduled_for_removal(KEYBINDINGS.md): returning false\n  is_a_node(KEYBINDINGS.md): returning false\nLINK: KEYBINDINGS.md => .dots/zsh/KEYBINDINGS.md\nPlanning stow of package zsh... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing zsh would cause conflicts:\n  * existing target is not owned by stow: .zshrc\nAll operations aborted.\n✗ Failed to stow zsh\n  Stowing aerospace...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"aerospace\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package aerospace...\n. not protected\nStowing contents of .dots/aerospace (cwd=/Users/kef)\n  => .dots/aerospace\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: dot-aerospace.toml => .aerospace.toml\nStowing .dots / aerospace / .aerospace.toml\n  => .dots/aerospace/dot-aerospace.toml\n  is_a_link(.aerospace.toml)\n  link_task_action(.aerospace.toml): no task\n  is_a_link(.aerospace.toml): returning 0\n  is_a_node(.aerospace.toml)\n  link_task_action(.aerospace.toml): no task\n  dir_task_action(.aerospace.toml): no task\n    parent_link_scheduled_for_removal(.aerospace.toml): prefix .aerospace.toml\n    parent_link_scheduled_for_removal(.aerospace.toml): returning false\n  is_a_node(.aerospace.toml): returning false\nLINK: .aerospace.toml => .dots/aerospace/dot-aerospace.toml\n  Ignoring path README.md due to --ignore=(?^:^README.*\\z)\nPlanning stow of package aerospace... done\ncwd restored to /Users/kef/.dots\nProcessing tasks...\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\nProcessing tasks... done\n✓ Stowed aerospace\n  Stowing doom...\n  Backing up: /Users/kef/.config/doom/packages.el\n  Backing up: /Users/kef/.config/doom/config.el\n  Backing up: /Users/kef/.config/doom/init.el\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"doom\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package doom...\n. not protected\nStowing contents of .dots/doom (cwd=/Users/kef)\n  => .dots/doom\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .config => .config\nStowing .dots / doom / .config\n  => .dots/doom/.config\n  is_a_link(.config)\n  link_task_action(.config): no task\n  is_a_link(.config): returning 0\n  is_a_node(.config)\n  link_task_action(.config): no task\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_node(.config): really exists\n  Evaluate existing node: .config\n  is_a_dir(.config)\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_dir(.config): real dir\n.config not protected\nStowing contents of .dots/doom/.config (cwd=/Users/kef)\n  => ../.dots/doom/.config\n  is_a_node(.config)\n  link_task_action(.config): no task\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_node(.config): really exists\n  Using built-in ignore list\n  Adjusting: .config/doom => .config/doom\nStowing .dots / doom / .config/doom\n  => ../.dots/doom/.config/doom\n  is_a_link(.config/doom)\n  link_task_action(.config/doom): no task\n  is_a_link(.config/doom): is a real link\n    parent_link_scheduled_for_removal(.config/doom): prefix .config\n    parent_link_scheduled_for_removal(.config/doom): prefix .config/doom\n    parent_link_scheduled_for_removal(.config/doom): returning false\n  link_task_action(.config/doom): no task\n  read_a_link(.config/doom): real link\n  Evaluate existing link: .config/doom => ../Dropbox/Code/dotfiles/doom/.config/doom\n  is path Dropbox/Code/dotfiles/doom/.config/doom owned by stow?\n    no - either Dropbox/Code/dotfiles/doom/.config/doom not under .dots or vice-versa\nCONFLICT when stowing doom: existing target is not owned by stow: .config/doom\nPlanning stow of package doom... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing doom would cause conflicts:\n  * existing target is not owned by stow: .config/doom\nAll operations aborted.\n✗ Failed to stow doom\n  Stowing emacs...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"emacs\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package emacs...\n. not protected\nStowing contents of .dots/emacs (cwd=/Users/kef)\n  => .dots/emacs\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Ignoring path README.md due to --ignore=(?^:^README.*\\z)\nPlanning stow of package emacs... done\ncwd restored to /Users/kef/.dots\nProcessing tasks...\n✓ Stowed emacs\n  Stowing gnupg...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"gnupg\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package gnupg...\n. not protected\nStowing contents of .dots/gnupg (cwd=/Users/kef)\n  => .dots/gnupg\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: dot-gnupg => .gnupg\nStowing .dots / gnupg / .gnupg\n  => .dots/gnupg/dot-gnupg\n  is_a_link(.gnupg)\n  link_task_action(.gnupg): no task\n  is_a_link(.gnupg): returning 0\n  is_a_node(.gnupg)\n  link_task_action(.gnupg): no task\n  dir_task_action(.gnupg): no task\n    parent_link_scheduled_for_removal(.gnupg): prefix .gnupg\n    parent_link_scheduled_for_removal(.gnupg): returning false\n  is_a_node(.gnupg): really exists\n  Evaluate existing node: .gnupg\n  is_a_dir(.gnupg)\n  dir_task_action(.gnupg): no task\n    parent_link_scheduled_for_removal(.gnupg): prefix .gnupg\n    parent_link_scheduled_for_removal(.gnupg): returning false\n  is_a_dir(.gnupg): real dir\n.gnupg not protected\nStowing contents of .dots/gnupg/.gnupg (cwd=/Users/kef)\n  => ../.dots/gnupg/dot-gnupg\nstow: ERROR: stow_contents() called with non-directory path: .dots/gnupg/.gnupg\n✗ Failed to stow gnupg\n  Stowing kitty...\n  Backing up: /Users/kef/.config/kitty/kitty.conf\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"kitty\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package kitty...\n. not protected\nStowing contents of .dots/kitty (cwd=/Users/kef)\n  => .dots/kitty\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .config => .config\nStowing .dots / kitty / .config\n  => .dots/kitty/.config\n  is_a_link(.config)\n  link_task_action(.config): no task\n  is_a_link(.config): returning 0\n  is_a_node(.config)\n  link_task_action(.config): no task\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_node(.config): really exists\n  Evaluate existing node: .config\n  is_a_dir(.config)\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_dir(.config): real dir\n.config not protected\nStowing contents of .dots/kitty/.config (cwd=/Users/kef)\n  => ../.dots/kitty/.config\n  is_a_node(.config)\n  link_task_action(.config): no task\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_node(.config): really exists\n  Using built-in ignore list\n  Adjusting: .config/kitty => .config/kitty\nStowing .dots / kitty / .config/kitty\n  => ../.dots/kitty/.config/kitty\n  is_a_link(.config/kitty)\n  link_task_action(.config/kitty): no task\n  is_a_link(.config/kitty): is a real link\n    parent_link_scheduled_for_removal(.config/kitty): prefix .config\n    parent_link_scheduled_for_removal(.config/kitty): prefix .config/kitty\n    parent_link_scheduled_for_removal(.config/kitty): returning false\n  link_task_action(.config/kitty): no task\n  read_a_link(.config/kitty): real link\n  Evaluate existing link: .config/kitty => ../Library/CloudStorage/Dropbox/Code/dotfiles/kitty/.config/kitty\n  is path Library/CloudStorage/Dropbox/Code/dotfiles/kitty/.config/kitty owned by stow?\n    no - either Library/CloudStorage/Dropbox/Code/dotfiles/kitty/.config/kitty not under .dots or vice-versa\nCONFLICT when stowing kitty: existing target is not owned by stow: .config/kitty\nPlanning stow of package kitty... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing kitty would cause conflicts:\n  * existing target is not owned by stow: .config/kitty\nAll operations aborted.\n✗ Failed to stow kitty\n  Stowing mail...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"mail\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package mail...\n. not protected\nStowing contents of .dots/mail (cwd=/Users/kef)\n  => .dots/mail\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .mbsyncrc => .mbsyncrc\nStowing .dots / mail / .mbsyncrc\n  => .dots/mail/.mbsyncrc\n  is_a_link(.mbsyncrc)\n  link_task_action(.mbsyncrc): no task\n  is_a_link(.mbsyncrc): is a real link\n    parent_link_scheduled_for_removal(.mbsyncrc): prefix .mbsyncrc\n    parent_link_scheduled_for_removal(.mbsyncrc): returning false\n  link_task_action(.mbsyncrc): no task\n  read_a_link(.mbsyncrc): real link\n  Evaluate existing link: .mbsyncrc => Dropbox/Code/dotfiles/mail/.mbsyncrc\n  is path Dropbox/Code/dotfiles/mail/.mbsyncrc owned by stow?\n    no - either Dropbox/Code/dotfiles/mail/.mbsyncrc not under .dots or vice-versa\nCONFLICT when stowing mail: existing target is not owned by stow: .mbsyncrc\nPlanning stow of package mail... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing mail would cause conflicts:\n  * existing target is not owned by stow: .mbsyncrc\nAll operations aborted.\n✗ Failed to stow mail\n  Stowing secrets...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"secrets\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package secrets...\n. not protected\nStowing contents of .dots/secrets (cwd=/Users/kef)\n  => .dots/secrets\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .authinfo.gpg => .authinfo.gpg\nStowing .dots / secrets / .authinfo.gpg\n  => .dots/secrets/.authinfo.gpg\n  is_a_link(.authinfo.gpg)\n  link_task_action(.authinfo.gpg): no task\n  is_a_link(.authinfo.gpg): is a real link\n    parent_link_scheduled_for_removal(.authinfo.gpg): prefix .authinfo.gpg\n    parent_link_scheduled_for_removal(.authinfo.gpg): returning false\n  link_task_action(.authinfo.gpg): no task\n  read_a_link(.authinfo.gpg): real link\n  Evaluate existing link: .authinfo.gpg => Dropbox/Code/dotfiles/secrets/.authinfo.gpg\n  is path Dropbox/Code/dotfiles/secrets/.authinfo.gpg owned by stow?\n    no - either Dropbox/Code/dotfiles/secrets/.authinfo.gpg not under .dots or vice-versa\nCONFLICT when stowing secrets: existing target is not owned by stow: .authinfo.gpg\n  Using built-in ignore list\n  Adjusting: .mbsync-fastmail.gpg => .mbsync-fastmail.gpg\nStowing .dots / secrets / .mbsync-fastmail.gpg\n  => .dots/secrets/.mbsync-fastmail.gpg\n  is_a_link(.mbsync-fastmail.gpg)\n  link_task_action(.mbsync-fastmail.gpg): no task\n  is_a_link(.mbsync-fastmail.gpg): is a real link\n    parent_link_scheduled_for_removal(.mbsync-fastmail.gpg): prefix .mbsync-fastmail.gpg\n    parent_link_scheduled_for_removal(.mbsync-fastmail.gpg): returning false\n  link_task_action(.mbsync-fastmail.gpg): no task\n  read_a_link(.mbsync-fastmail.gpg): real link\n  Evaluate existing link: .mbsync-fastmail.gpg => Dropbox/Code/dotfiles/secrets/.mbsync-fastmail.gpg\n  is path Dropbox/Code/dotfiles/secrets/.mbsync-fastmail.gpg owned by stow?\n    no - either Dropbox/Code/dotfiles/secrets/.mbsync-fastmail.gpg not under .dots or vice-versa\nCONFLICT when stowing secrets: existing target is not owned by stow: .mbsync-fastmail.gpg\nPlanning stow of package secrets... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing secrets would cause conflicts:\n  * existing target is not owned by stow: .authinfo.gpg\n  * existing target is not owned by stow: .mbsync-fastmail.gpg\nAll operations aborted.\n✗ Failed to stow secrets\n  Stowing sketchybar...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"sketchybar\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package sketchybar...\n. not protected\nStowing contents of .dots/sketchybar (cwd=/Users/kef)\n  => .dots/sketchybar\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .config => .config\nStowing .dots / sketchybar / .config\n  => .dots/sketchybar/.config\n  is_a_link(.config)\n  link_task_action(.config): no task\n  is_a_link(.config): returning 0\n  is_a_node(.config)\n  link_task_action(.config): no task\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_node(.config): really exists\n  Evaluate existing node: .config\n  is_a_dir(.config)\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_dir(.config): real dir\n.config not protected\nStowing contents of .dots/sketchybar/.config (cwd=/Users/kef)\n  => ../.dots/sketchybar/.config\n  is_a_node(.config)\n  link_task_action(.config): no task\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_node(.config): really exists\n  Using built-in ignore list\n  Adjusting: .config/sketchybar => .config/sketchybar\nStowing .dots / sketchybar / .config/sketchybar\n  => ../.dots/sketchybar/.config/sketchybar\n  is_a_link(.config/sketchybar)\n  link_task_action(.config/sketchybar): no task\n  is_a_link(.config/sketchybar): returning 0\n  is_a_node(.config/sketchybar)\n  link_task_action(.config/sketchybar): no task\n  dir_task_action(.config/sketchybar): no task\n    parent_link_scheduled_for_removal(.config/sketchybar): prefix .config\n    parent_link_scheduled_for_removal(.config/sketchybar): prefix .config/sketchybar\n    parent_link_scheduled_for_removal(.config/sketchybar): returning false\n  is_a_node(.config/sketchybar): returning false\nLINK: .config/sketchybar => ../.dots/sketchybar/.config/sketchybar\nPlanning stow of package sketchybar... done\ncwd restored to /Users/kef/.dots\nProcessing tasks...\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\nProcessing tasks... done\n✓ Stowed sketchybar\n  Stowing skhd...\n  Backing up: /Users/kef/.config/skhd/skhdrc\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"skhd\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package skhd...\n. not protected\nStowing contents of .dots/skhd (cwd=/Users/kef)\n  => .dots/skhd\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .config => .config\nStowing .dots / skhd / .config\n  => .dots/skhd/.config\n  is_a_link(.config)\n  link_task_action(.config): no task\n  is_a_link(.config): returning 0\n  is_a_node(.config)\n  link_task_action(.config): no task\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_node(.config): really exists\n  Evaluate existing node: .config\n  is_a_dir(.config)\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_dir(.config): real dir\n.config not protected\nStowing contents of .dots/skhd/.config (cwd=/Users/kef)\n  => ../.dots/skhd/.config\n  is_a_node(.config)\n  link_task_action(.config): no task\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_node(.config): really exists\n  Using built-in ignore list\n  Adjusting: .config/skhd => .config/skhd\nStowing .dots / skhd / .config/skhd\n  => ../.dots/skhd/.config/skhd\n  is_a_link(.config/skhd)\n  link_task_action(.config/skhd): no task\n  is_a_link(.config/skhd): is a real link\n    parent_link_scheduled_for_removal(.config/skhd): prefix .config\n    parent_link_scheduled_for_removal(.config/skhd): prefix .config/skhd\n    parent_link_scheduled_for_removal(.config/skhd): returning false\n  link_task_action(.config/skhd): no task\n  read_a_link(.config/skhd): real link\n  Evaluate existing link: .config/skhd => ../Library/CloudStorage/Dropbox/Code/dotfiles/skhd/.config/skhd\n  is path Library/CloudStorage/Dropbox/Code/dotfiles/skhd/.config/skhd owned by stow?\n    no - either Library/CloudStorage/Dropbox/Code/dotfiles/skhd/.config/skhd not under .dots or vice-versa\nCONFLICT when stowing skhd: existing target is not owned by stow: .config/skhd\nPlanning stow of package skhd... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing skhd would cause conflicts:\n  * existing target is not owned by stow: .config/skhd\nAll operations aborted.\n✗ Failed to stow skhd\n  Stowing ssh...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"ssh\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package ssh...\n. not protected\nStowing contents of .dots/ssh (cwd=/Users/kef)\n  => .dots/ssh\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .ssh => .ssh\nStowing .dots / ssh / .ssh\n  => .dots/ssh/.ssh\n  is_a_link(.ssh)\n  link_task_action(.ssh): no task\n  is_a_link(.ssh): returning 0\n  is_a_node(.ssh)\n  link_task_action(.ssh): no task\n  dir_task_action(.ssh): no task\n    parent_link_scheduled_for_removal(.ssh): prefix .ssh\n    parent_link_scheduled_for_removal(.ssh): returning false\n  is_a_node(.ssh): really exists\n  Evaluate existing node: .ssh\n  is_a_dir(.ssh)\n  dir_task_action(.ssh): no task\n    parent_link_scheduled_for_removal(.ssh): prefix .ssh\n    parent_link_scheduled_for_removal(.ssh): returning false\n  is_a_dir(.ssh): real dir\n.ssh not protected\nStowing contents of .dots/ssh/.ssh (cwd=/Users/kef)\n  => ../.dots/ssh/.ssh\n  is_a_node(.ssh)\n  link_task_action(.ssh): no task\n  dir_task_action(.ssh): no task\n    parent_link_scheduled_for_removal(.ssh): prefix .ssh\n    parent_link_scheduled_for_removal(.ssh): returning false\n  is_a_node(.ssh): really exists\n  Using built-in ignore list\n  Adjusting: .ssh/config => .ssh/config\nStowing .dots / ssh / .ssh/config\n  => ../.dots/ssh/.ssh/config\n  is_a_link(.ssh/config)\n  link_task_action(.ssh/config): no task\n  is_a_link(.ssh/config): is a real link\n    parent_link_scheduled_for_removal(.ssh/config): prefix .ssh\n    parent_link_scheduled_for_removal(.ssh/config): prefix .ssh/config\n    parent_link_scheduled_for_removal(.ssh/config): returning false\n  link_task_action(.ssh/config): no task\n  read_a_link(.ssh/config): real link\n  Evaluate existing link: .ssh/config => ../Dropbox/Code/dotfiles/ssh/.ssh/config\n  is path Dropbox/Code/dotfiles/ssh/.ssh/config owned by stow?\n    no - either Dropbox/Code/dotfiles/ssh/.ssh/config not under .dots or vice-versa\nCONFLICT when stowing ssh: existing target is not owned by stow: .ssh/config\nPlanning stow of package ssh... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing ssh would cause conflicts:\n  * existing target is not owned by stow: .ssh/config\nAll operations aborted.\n✗ Failed to stow ssh\n  Stowing x-windows...\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"x-windows\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package x-windows...\n. not protected\nStowing contents of .dots/x-windows (cwd=/Users/kef)\n  => .dots/x-windows\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .Xresources => .Xresources\nStowing .dots / x-windows / .Xresources\n  => .dots/x-windows/.Xresources\n  is_a_link(.Xresources)\n  link_task_action(.Xresources): no task\n  is_a_link(.Xresources): is a real link\n    parent_link_scheduled_for_removal(.Xresources): prefix .Xresources\n    parent_link_scheduled_for_removal(.Xresources): returning false\n  link_task_action(.Xresources): no task\n  read_a_link(.Xresources): real link\n  Evaluate existing link: .Xresources => Dropbox/Code/dotfiles/x-windows/.Xresources\n  is path Dropbox/Code/dotfiles/x-windows/.Xresources owned by stow?\n    no - either Dropbox/Code/dotfiles/x-windows/.Xresources not under .dots or vice-versa\nCONFLICT when stowing x-windows: existing target is not owned by stow: .Xresources\n  Using built-in ignore list\n  Adjusting: .xinitrc => .xinitrc\nStowing .dots / x-windows / .xinitrc\n  => .dots/x-windows/.xinitrc\n  is_a_link(.xinitrc)\n  link_task_action(.xinitrc): no task\n  is_a_link(.xinitrc): is a real link\n    parent_link_scheduled_for_removal(.xinitrc): prefix .xinitrc\n    parent_link_scheduled_for_removal(.xinitrc): returning false\n  link_task_action(.xinitrc): no task\n  read_a_link(.xinitrc): real link\n  Evaluate existing link: .xinitrc => Dropbox/Code/dotfiles/x-windows/.xinitrc\n  is path Dropbox/Code/dotfiles/x-windows/.xinitrc owned by stow?\n    no - either Dropbox/Code/dotfiles/x-windows/.xinitrc not under .dots or vice-versa\nCONFLICT when stowing x-windows: existing target is not owned by stow: .xinitrc\n  Using built-in ignore list\n  Adjusting: .inputrc => .inputrc\nStowing .dots / x-windows / .inputrc\n  => .dots/x-windows/.inputrc\n  is_a_link(.inputrc)\n  link_task_action(.inputrc): no task\n  is_a_link(.inputrc): is a real link\n    parent_link_scheduled_for_removal(.inputrc): prefix .inputrc\n    parent_link_scheduled_for_removal(.inputrc): returning false\n  link_task_action(.inputrc): no task\n  read_a_link(.inputrc): real link\n  Evaluate existing link: .inputrc => Dropbox/Code/dotfiles/x-windows/.inputrc\n  is path Dropbox/Code/dotfiles/x-windows/.inputrc owned by stow?\n    no - either Dropbox/Code/dotfiles/x-windows/.inputrc not under .dots or vice-versa\nCONFLICT when stowing x-windows: existing target is not owned by stow: .inputrc\nPlanning stow of package x-windows... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing x-windows would cause conflicts:\n  * existing target is not owned by stow: .Xresources\n  * existing target is not owned by stow: .inputrc\n  * existing target is not owned by stow: .xinitrc\nAll operations aborted.\n✗ Failed to stow x-windows\n  Stowing yabai...\n  Backing up: /Users/kef/.config/yabai/yabairc\n  Running: stow --target=\"/Users/kef\" --ignore='^README.*' --dotfiles --verbose=4 \"yabai\"\nstow dir is /Users/kef/.dots\nstow dir path relative to target /Users/kef is .dots\ncwd now /Users/kef\ncwd restored to /Users/kef/.dots\ncwd now /Users/kef\nPlanning stow of package yabai...\n. not protected\nStowing contents of .dots/yabai (cwd=/Users/kef)\n  => .dots/yabai\n  is_a_node(.)\n  link_task_action(.): no task\n  dir_task_action(.): no task\n    parent_link_scheduled_for_removal(.): prefix \n    parent_link_scheduled_for_removal(.): returning false\n  is_a_node(.): really exists\n  Using built-in ignore list\n  Adjusting: .config => .config\nStowing .dots / yabai / .config\n  => .dots/yabai/.config\n  is_a_link(.config)\n  link_task_action(.config): no task\n  is_a_link(.config): returning 0\n  is_a_node(.config)\n  link_task_action(.config): no task\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_node(.config): really exists\n  Evaluate existing node: .config\n  is_a_dir(.config)\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_dir(.config): real dir\n.config not protected\nStowing contents of .dots/yabai/.config (cwd=/Users/kef)\n  => ../.dots/yabai/.config\n  is_a_node(.config)\n  link_task_action(.config): no task\n  dir_task_action(.config): no task\n    parent_link_scheduled_for_removal(.config): prefix .config\n    parent_link_scheduled_for_removal(.config): returning false\n  is_a_node(.config): really exists\n  Using built-in ignore list\n  Adjusting: .config/yabai => .config/yabai\nStowing .dots / yabai / .config/yabai\n  => ../.dots/yabai/.config/yabai\n  is_a_link(.config/yabai)\n  link_task_action(.config/yabai): no task\n  is_a_link(.config/yabai): is a real link\n    parent_link_scheduled_for_removal(.config/yabai): prefix .config\n    parent_link_scheduled_for_removal(.config/yabai): prefix .config/yabai\n    parent_link_scheduled_for_removal(.config/yabai): returning false\n  link_task_action(.config/yabai): no task\n  read_a_link(.config/yabai): real link\n  Evaluate existing link: .config/yabai => ../Library/CloudStorage/Dropbox/Code/dotfiles/yabai/.config/yabai\n  is path Library/CloudStorage/Dropbox/Code/dotfiles/yabai/.config/yabai owned by stow?\n    no - either Library/CloudStorage/Dropbox/Code/dotfiles/yabai/.config/yabai not under .dots or vice-versa\nCONFLICT when stowing yabai: existing target is not owned by stow: .config/yabai\nPlanning stow of package yabai... done\ncwd restored to /Users/kef/.dots\nWARNING! stowing yabai would cause conflicts:\n  * existing target is not owned by stow: .config/yabai\nAll operations aborted.\n✗ Failed to stow yabai\n  Stowing youtube-dl...\n  Backing up: /Users/kef/.config/youtube-dl/config","number":1,"title":"Install on machine with existing symlinks."}]
